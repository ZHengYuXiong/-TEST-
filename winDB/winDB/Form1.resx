<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAgFBgcGBQgHBgcJCAgJDBMMDAsLDBgREg4THBgdHRsYGxof
        IywlHyEqIRobJjQnKi4vMTIxHiU2OjYwOiwwMTD/2wBDAQgJCQwKDBcMDBcwIBsgMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDD/wAARCAF3AlgDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAQFAwYHAgEI/8QAPxAAAgEDAwIEBAMGBAMJAAAAAAECAwQRBRIhBjET
        QVFhFCJxgTKRoQcVI0JSsTOywfBictEkU4KSosLh4vH/xAAbAQEAAgMBAQAAAAAAAAAAAAAAAgMBBAUG
        B//EADIRAQACAgEDAwEGAwkAAAAAAAABAgMRBBIhQQUTMVEUMmFxobEiI+EVJFJigZHR8PH/2gAMAwEA
        AhEDEQA/ALcAGg+ggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA+QnGcVKElKL7NPKZ9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGG5uYW8JSqRqSUVnEK
        Upv/ANKZmAJ/BXaTdyq0vCnGU5xWXOElOCy87d3qk1lexYmOjSVJTwl88nN4XqYNLu3e286rio7a1Sms
        ekZuOf0Cum6xFbTuUsGJVl8VKjuhlQU1HPzd2s/TgyhOJ2AAMgAAAAAAAAAAHjxqW1S8SO1vCeeG/Ql6
        ZbxubybqxpTpW1vUuZQqtKFRxwoxllrjM84ys7ceZ07Toxv+n7f4tW9aNe3jvVKP8OWV/KueC2mPqjbk
        cv1L7Pk9utd/VykGTUbaNhqSo0uKFeDqQj/Q4tKSXt80Wl9fYxkLV6Z06HHz1z44yV8gAIrwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACp6bjL9ypwaUpz
        qTi2uOZN/wCpZ15baM5f0xb/AEI+k0/Cs1T/AKZSjx7PBLwotP8AOrH4T+8IVaheLW6NVSpOc6coqapv
        bCmmm1JZ5bbjh5WMPhlvFNL5nl574DjFyUnFbo5SeOUfTCylOmZn6gAMJgAAAAAAAAAAk6VXt7XUIVL6
        NWdpKOyp4TanBqcJwmsd8SguPRvv2e+19d0ez6e36fdUXb0qWyO2X+GksfNnlNLyfJzearTnSo20YyrV
        qkacN7xFOTxl+y7lhpfSs7+9UtRuKMqdOMakqdGm0quKk1GMm5cxzBSxgtrl6K93nvU8GKcnV1atPj6q
        +pdPUrr458U3HZQj6Q75fu+PyR6Lq70jSo6zWox1OdFtxnVtqcE5QlOWE08NJNvOGn38kUPW3TWp6PjV
        dPv1WtaVKVOrSqpRnh4+bjiWPLCT+vYp9yLz3bGLm4MGKKxE9v8AssgKKw1KdGFraN2+Ix2yqyrYxGOP
        LHfDXGe+S7hOM4RnCSlGSymnlNEnSwcinIp10l6ABheAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwag8afcvOMUpPP2ZljFQuLqMU0o3FRJPy+ZmDVXjTLrjP
        8Gf9mSbtxp6nqe6SjGN5U5b9Xn/UnH3Wpaf7zWP8s/vACtlfXcbadWFqrl+JKMY0pc4U9vK+nOV6+S5P
        tSV/Qp17uFKpWUpS220l80cJJNY7ptPPfvle8VVvUuNXUTbzr8vzWIIlrfePXdN0ZU/kzmX9S/FH7Zj+
        fsSzDdx5K5I6qTuA81akaVOdSo8RgnJvHZI9GO4h4lvUh33Ra/QJS+0KtOvRhVpSU6c4qUZLzTI+p6ja
        aXbO4vaqpU847Ntv0SXc1borXba10+vZ3lWSlQm5xSg5fJLLfZPhPd9MooOoNeneX9StSrb6Kb2ycGnS
        XlHv2fGcrv8AQsinfTQvza1xRePmWyXXW6eVZWcn822Lm/P0aX4X34zzgxUepr6pUm67dHDUYqnCG2WV
        n+Z58+/CNe3Orb+IqWZySjJQXDfpz+eO68srDjloXl3G0qOlS3RqV4STkllYa9+fw+aX+hKaxEONzeZm
        rTcW1O/HZslr1VXnd0qTp0qtOdVUpSUXDbnHOU5LzN21DTNQ01br+zq0af8A3qxOn9d0W0vvg5jY1alf
        WLWVe2julqFNY2ZeN0Fjcso/TXTm/wDcVlCrLfOFKMJNvOcLHPvwZrSLQo4/qvIp96er83HdWu/g7B3k
        Krp+DOnVU44eMTi+DoeiW9tp9lthdyuVN7/EqNbpL7f75KbrXRNA0aF3dahYSnbVk504U5TUd0mk47U8
        d2pLjKy8fhOc2XWOs0LSpHTby1nRt7hUKVtdU/njT25g3VTxjhrLxyuWjVyVmZ6YX8jlU5Foya12dHnp
        9GlrOoaxd1Y06d1CmpRm8KntSX4s+yPXWMbXWNAqt/DLwk5xuZty8FY5lHbznHuc+uuo9a1zTqtjf07a
        jTlhudKLUt0XnDzL1S8vIiW2mU5VLaELdUozk47ksZ7ry7rJCMc/My52Tl44/hiNwzaB8VLTbiCioKUE
        6M50/wDDfaUc+qw/05L+xhKnaUqc5RlOEFGTisLOPJGGhs0fSa0b2G6lRXLxlTT4x9W/7nvT6MKVvuhT
        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
        AAAA/9k=
</value>
  </data>
</root>